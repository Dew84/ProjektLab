/**
 * TradeByte API
 * Közösségi adok-veszek oldal API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AdDto from './model/AdDto';
import AdDtoPagedResult from './model/AdDtoPagedResult';
import AuthResultDto from './model/AuthResultDto';
import CategoryDto from './model/CategoryDto';
import CreateAdDto from './model/CreateAdDto';
import CreateCategoryDto from './model/CreateCategoryDto';
import LoginDto from './model/LoginDto';
import ProblemDetails from './model/ProblemDetails';
import RegisterDto from './model/RegisterDto';
import UpdateAdDto from './model/UpdateAdDto';
import UpdateCategoryDto from './model/UpdateCategoryDto';
import UpdateUserDto from './model/UpdateUserDto';
import UserDto from './model/UserDto';
import AdsApi from './api/AdsApi';
import AuthApi from './api/AuthApi';
import CategoriesApi from './api/CategoriesApi';
import UsersApi from './api/UsersApi';


/**
* Közösségi adok-veszek oldal API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var TradeByteApi = require('index'); // See note below*.
* var xxxSvc = new TradeByteApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new TradeByteApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new TradeByteApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new TradeByteApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AdDto model constructor.
     * @property {module:model/AdDto}
     */
    AdDto,

    /**
     * The AdDtoPagedResult model constructor.
     * @property {module:model/AdDtoPagedResult}
     */
    AdDtoPagedResult,

    /**
     * The AuthResultDto model constructor.
     * @property {module:model/AuthResultDto}
     */
    AuthResultDto,

    /**
     * The CategoryDto model constructor.
     * @property {module:model/CategoryDto}
     */
    CategoryDto,

    /**
     * The CreateAdDto model constructor.
     * @property {module:model/CreateAdDto}
     */
    CreateAdDto,

    /**
     * The CreateCategoryDto model constructor.
     * @property {module:model/CreateCategoryDto}
     */
    CreateCategoryDto,

    /**
     * The LoginDto model constructor.
     * @property {module:model/LoginDto}
     */
    LoginDto,

    /**
     * The ProblemDetails model constructor.
     * @property {module:model/ProblemDetails}
     */
    ProblemDetails,

    /**
     * The RegisterDto model constructor.
     * @property {module:model/RegisterDto}
     */
    RegisterDto,

    /**
     * The UpdateAdDto model constructor.
     * @property {module:model/UpdateAdDto}
     */
    UpdateAdDto,

    /**
     * The UpdateCategoryDto model constructor.
     * @property {module:model/UpdateCategoryDto}
     */
    UpdateCategoryDto,

    /**
     * The UpdateUserDto model constructor.
     * @property {module:model/UpdateUserDto}
     */
    UpdateUserDto,

    /**
     * The UserDto model constructor.
     * @property {module:model/UserDto}
     */
    UserDto,

    /**
    * The AdsApi service constructor.
    * @property {module:api/AdsApi}
    */
    AdsApi,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
