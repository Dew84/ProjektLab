/**
 * TradeByte API
 * Közösségi adok-veszek oldal API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AdDto model module.
 * @module model/AdDto
 * @version v1
 */
class AdDto {
    /**
     * Constructs a new <code>AdDto</code>.
     * @alias module:model/AdDto
     */
    constructor() { 
        
        AdDto.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AdDto</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AdDto} obj Optional instance to populate.
     * @return {module:model/AdDto} The populated <code>AdDto</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AdDto();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('price')) {
                obj['price'] = ApiClient.convertToType(data['price'], 'Number');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('userId')) {
                obj['userId'] = ApiClient.convertToType(data['userId'], 'Number');
            }
            if (data.hasOwnProperty('sellerDisplayName')) {
                obj['sellerDisplayName'] = ApiClient.convertToType(data['sellerDisplayName'], 'String');
            }
            if (data.hasOwnProperty('categoryIds')) {
                obj['categoryIds'] = ApiClient.convertToType(data['categoryIds'], ['Number']);
            }
            if (data.hasOwnProperty('pictureUrls')) {
                obj['pictureUrls'] = ApiClient.convertToType(data['pictureUrls'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AdDto</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AdDto</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['sellerDisplayName'] && !(typeof data['sellerDisplayName'] === 'string' || data['sellerDisplayName'] instanceof String)) {
            throw new Error("Expected the field `sellerDisplayName` to be a primitive type in the JSON string but got " + data['sellerDisplayName']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['categoryIds'])) {
            throw new Error("Expected the field `categoryIds` to be an array in the JSON data but got " + data['categoryIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['pictureUrls'])) {
            throw new Error("Expected the field `pictureUrls` to be an array in the JSON data but got " + data['pictureUrls']);
        }

        return true;
    }


}



/**
 * @member {Number} id
 */
AdDto.prototype['id'] = undefined;

/**
 * @member {String} title
 */
AdDto.prototype['title'] = undefined;

/**
 * @member {String} description
 */
AdDto.prototype['description'] = undefined;

/**
 * @member {Number} price
 */
AdDto.prototype['price'] = undefined;

/**
 * @member {Date} createdAt
 */
AdDto.prototype['createdAt'] = undefined;

/**
 * @member {Number} userId
 */
AdDto.prototype['userId'] = undefined;

/**
 * @member {String} sellerDisplayName
 */
AdDto.prototype['sellerDisplayName'] = undefined;

/**
 * @member {Array.<Number>} categoryIds
 */
AdDto.prototype['categoryIds'] = undefined;

/**
 * @member {Array.<String>} pictureUrls
 */
AdDto.prototype['pictureUrls'] = undefined;






export default AdDto;

