/**
 * TradeByte API
 * Közösségi adok-veszek oldal API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AuthResultDto from '../model/AuthResultDto';
import LoginDto from '../model/LoginDto';
import ProblemDetails from '../model/ProblemDetails';
import RegisterDto from '../model/RegisterDto';

/**
* Auth service.
* @module api/AuthApi
* @version v1
*/
export default class AuthApi {

    /**
    * Constructs a new AuthApi. 
    * @alias module:api/AuthApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiAuthLoginPost operation.
     * @callback module:api/AuthApi~apiAuthLoginPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/LoginDto} [loginDto] 
     * @param {module:api/AuthApi~apiAuthLoginPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthResultDto}
     */
    apiAuthLoginPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['loginDto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['application/json'];
      let returnType = AuthResultDto;
      return this.apiClient.callApi(
        '/api/Auth/login', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiAuthRegisterPost operation.
     * @callback module:api/AuthApi~apiAuthRegisterPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthResultDto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/RegisterDto} [registerDto] 
     * @param {module:api/AuthApi~apiAuthRegisterPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthResultDto}
     */
    apiAuthRegisterPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['registerDto'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['Bearer'];
      let contentTypes = ['application/json', 'text/json', 'application/*+json'];
      let accepts = ['application/json'];
      let returnType = AuthResultDto;
      return this.apiClient.callApi(
        '/api/Auth/register', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
